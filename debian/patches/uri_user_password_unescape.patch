--- a/src/libostree/ostree-fetcher-curl.c
+++ b/src/libostree/ostree-fetcher-curl.c
@@ -903,10 +903,10 @@
     }
 
   /* If we have e.g. basic auth in the URL string, let's honor that */
-  const char *username = g_uri_get_user (baseuri);
+  const char *username = g_uri_unescape_string(g_uri_get_user (baseuri), NULL);
   rc = curl_easy_setopt (req->easy, CURLOPT_USERNAME, username);
   g_assert_cmpint (rc, ==, CURLM_OK);
-  const char *password = g_uri_get_password (baseuri);
+  const char *password = g_uri_unescape_string(g_uri_get_password (baseuri), NULL);
   rc = curl_easy_setopt (req->easy, CURLOPT_PASSWORD, password);
   g_assert_cmpint (rc, ==, CURLM_OK);
 
--- a/src/libostree/ostree-fetcher-uri.c
+++ b/src/libostree/ostree-fetcher-uri.c
@@ -95,8 +95,8 @@
         }
     }
   return (OstreeFetcherURI *)g_uri_build_with_user (
-      g_uri_get_flags (guri), g_uri_get_scheme (guri), g_uri_get_user (guri),
-      g_uri_get_password (guri), NULL, g_uri_get_host (guri), g_uri_get_port (guri), opath,
+      g_uri_get_flags (guri), g_uri_get_scheme (guri), g_uri_unescape_string(g_uri_get_user (guri), NULL),
+      g_uri_unescape_string(g_uri_get_password (guri), NULL), NULL, g_uri_get_host (guri), g_uri_get_port (guri), opath,
       g_uri_get_query (guri), g_uri_get_fragment (guri));
 }
 
